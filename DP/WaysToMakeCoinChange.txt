int helper(int arr[],int n,int value,int** arr2){
    if(n==0 || value <0)
        return 0;
    if(value==0){
        return 1;
    }
    if(arr[0]>value){
     	return helper(arr+1,n-1,value,arr2);
    }
    if(arr2[n][value]!=-1)
        return arr2[n][value];
    int ans=helper(arr,n,value-arr[0],arr2);
    ans+=helper(arr+1,n-1,value,arr2);
    arr2[n][value]=ans;
    return ans;
}

int countWaysToMakeChange(int arr[], int n, int value){
	//Write your code here
    int count=0;
    int** arr2=new int*[n+1];
    for(int i=0;i<n+1;i++){
        arr2[i]=new int[value+1];
        for(int j=0;j<value+1;j++){
            arr2[i][j]=-1;
        }
    }
    helper(arr,n,value,arr2);
}