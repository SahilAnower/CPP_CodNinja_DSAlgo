55. JUMP GAME
Medium

7811

477

Add to List

Share
You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.

 

Example 1:

Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:

Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.

~O(N)~
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int reach=0;
        int n=nums.size();
        int i=0;
        for(i=0;i<=reach && i<n;i++){ // if i becomes greater than reach at any point while i is less than n, it means we couldn't reach the end.
            reach=max(i+nums[i],reach); // Look for maximum reachable index from current index.
            if(reach>=n-1) // if reach gets greater than or equal to n-1, it means we have reached our index.
                return true;
        }
        return (i==n); // check if i==last-index, at the end.
    }
};